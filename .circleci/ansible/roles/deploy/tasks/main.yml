---
- name: "show remote environment"
  become: true
  shell: | 
    env
    cd /home/ubuntu/
    mkdir udapeople_app

- name: install rsync on the ansible controller
  become: yes
  connection: local
  package:
    name: rsync
    state: present


- name: "copy backend binaries"
  become: true
  synchronize:
    src: ../../backend/dist
    dest: /home/ubuntu/udapeople_app
    recursive: true

- name: "copy node_modules"
  become: yes
  synchronize:
    src: ../../backend/node_modules
    dest: /home/ubuntu/udapeople_app
    recursive: true

- name: "delete anything that might already be running"
  become: true
  command: |
    pm2 delete all
  ignore_errors: true

- name: "start server"
  become: true
  command: pm2 start -f ./main.js
  args:
    chdir: /home/ubuntu/udapeople_app/dist

  environment:
    ENVIRONMENT: production
    TYPEORM_CONNECTION: "{{ lookup('env', 'TYPEORM_CONNECTION') }}"
    TYPEORM_MIGRATIONS_DIR: "./migrations"
    TYPEORM_MIGRATIONS: "./migrations/*.js"
    TYPEORM_ENTITIES: "./modules/domain/**/*.entity.js"
    TYPEORM_HOST: "{{ lookup('env', 'TYPEORM_HOST') }}"
    TYPEORM_PORT: "{{ lookup('env', 'TYPEORM_PORT') }}"
    TYPEORM_USERNAME: "{{ lookup('env', 'TYPEORM_USERNAME') }}"
    TYPEORM_PASSWORD: "{{ lookup('env', 'TYPEORM_PASSWORD') }}"
    TYPEORM_DATABASE: "{{ lookup('env', 'TYPEORM_DATABASE') }}"
    
# - name: "Show Instance Environment"
#   shell: |
#     env
#     cd /home/ubuntu/
#     mkdir udapeople_app

# #Extract from achieved
# - name: "Extract the achieved artifact "
#   unarchive:
#     src: ../../../../../artifact.tar.gz
#     dest: /home/ubuntu/udapeople_app    

# - name: "delete running programmes"
#   become: true
#   command: |
#     pm2 delete all
#   ignore_errors: true

# - name: "Start App"
#   become: true
#   command: |
#     pm2 start -f ./main.js
#   args:
#     chdir: /home/ubuntu/udapeople_app/dist

